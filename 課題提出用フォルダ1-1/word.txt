①IT
■ITとは
「Information Technology」の略語。
PCやサーバ・ネットワーク・セキュリティー・情報処理などの情報技術の総称を指します。
類義語として、ICTが挙げられますが、ICTは「Information and Communication Technology」の略語で、
情報や技術を共有するためのコミュニケーション(通信)の部分が強調されている用語です。

②OS
■OSとは
オペレーティングシステムの略語。コンピューターの土台を支えているソフトウェアのことを指します。
PCとして、当たり前の機能を提供してくれます。
[以下機能例]
・キーボードから文字を入力すると、入力した文字が画面に表示される
・マウス・タッチパッドなどを操作すると、操作した位置がわかる
・イヤフォンを指すと、イヤフォンから音が聞こえる
また、OSはハードウェアとソフトウェアを仲介する役割もあり、ハードウェアの上にOSがのり、
OSの上に互換のあるソフトウェアをインストールする事が出来、様々な機能を使用する事が出来るようになります。

■Windows
マイクロソフトが開発・販売しているOSです。
日本ではPC用OSとして最も普及しており、市場シェアは、Mac OSやオープンソースのLinuxを圧倒しています。
マウスでアプリケーションのウィンドウを直感的に操作するGUIを採用したことで使い勝手が大きく向上し、世界的な大ヒットとなりました。

■macOS (Mac OS X)
アップルが開発・販売する、MacのOS。かつての名称はOS X、Mac OS X。
macOS自身がUNIX系OSの一種なこともあり、Linuxなど他のUNIX系OS向けのソフトウェアの導入や利用、
あるいはこれらのシステムへの接続や連携が容易であるため、サーバ向けソフトウェアの開発環境などの利用で人気が高まっています。

■UNIX
UnixはOSの一種で、現存する中でもっとも古いOSのひとつです。あらゆるOSの土台にもなっています。(Mac OSもUnix)
Unixは、一度世界中に無料公開され、急速に広まった為、ライセンス管理形態になり、商用化していきました。無駄が少なく動作が軽いのが特徴で、
現在でも携帯電話やカーナビのシステム開発などにも使用されています。GUIを主に採用しているWindowsと異なり、コマンドベースで操作するCUIを採用しています。

■Linux
Linaxは、オープンソースのソフトウェアで無償で誰でも利用することが可能です。
LinuxはUNIXと同じであると思われがちですが、LinuxはUNIXとは別物であり、ソースコードも全く別物です。
しかし、UNIXの標準規格であるPOSIXを満たしていることから、UNIX互換OSと言われています。
GPLというライセンス体系に基づいて誰でも自由に入手・改変・再配布が可能です。
※POSIX：UNIX系OSに共通する機能などについて、プログラムからの呼び出し方法などの標準を定めた規格。
※GPL：ソフトウェアの利用許諾条件などを定めたライセンスの一つ。

③言語・環境

■HTML
HTMLとは、Hyper Text Markup Language（ハイパーテキスト・マークアップ・ランゲージ）の略.
Webページを作るための最も基本的なマークアップ言語のひとつです。
ブラウザで観ているWebページのほとんどが、HTMLで作られています。
※マークアップ言語とは、コンピュータによって処理される人工言語の種類の一つ。データ中に特定の記法を用いて何らかの情報を埋め込むことが出来る。

■CSS
CSS（Cascading Style Sheets、カスケーディング・スタイル・シート）とは、ウェブページのスタイルを指定するための言語です。
HTMLと組み合わせて使用します。 HTMLがウェブページ内の各要素の意味や情報構造を定義するのに対して、CSSではそれらをどのように装飾するかを指定します。
例えば、ウェブページがスクリーンに表示される際の色・サイズ・レイアウトなどの表示スタイルを指定する際に使用します。

■MySQL
MySQLはオープンソースで提供されているデータベースの一つです。
データベースでは大量のデータをより安全により高速に取り扱うことができ、具体的にはデータの保管、更新、削除そして検索の機能があります。
この操作をするための言語をSQLと呼び、MySQLはSQLで動作します。
オープンソースの為、無償で利用でき、WordPressなどのCMS（Contents Management System）で使用されていることから、世界中で利用されています。

■PHP
PHPは動的にWebページを生成することができるサーバーサイドのスクリプト言語。
MySQLなどのデータベースとの連携が容易なことなどから、WordPressを含めたWebアプリケーションの開発にもよく使用されます。
PHPの主な特徴としてHTMLで記述したファイルの中に埋め込んで使うことができます。そしてPHPによって動的にHTMLを生成して表示することが可能となります。
例えばフォームでユーザーが入力した内容やショッピングカートでユーザーが購入した商品の種類や数によって確認画面などで表示される内容が変えることが出来るなどです。

■JavaScript
JavaScriptは動的なWebページを作成する事のできるフロントエンドのスクリプト言語。
処理はブラウザー上で実行されます。JavaScriptを使うと、ユーザーのアクションに応じたコンテンツの表示の他、
ブラウザー上で表示される地図やグラフィックアニメーションなども表示する事ができるようになります。
JavaScriptの技術の一つ、AjaxをGoogle Mapが採用し、更新しなくとも広範囲な地図を確認出来るようになったことを
きっかけにJavaScriptの人気は爆発的に広がっていきました。現在では、ほとんどのWebサイトでJavaScriptは使用されています。

■jQuery
jQueryは、JavaScript（ジャバスクリプト）のライブラリを指します。
(ライブラリとは、よく使う機能をパーツ化してまとめたものという意味)
JavaScriptよりも短いコードで実装でき、特定のブラウザに依存せず、基本的にどのブラウザでも動作するのが特徴です。

■Apache
Apacheとは世界の50%以上のシェア率で使用されているWebサーバーソフトウェアを指します。
Webサーバの役割は、Webサイトの閲覧者によるリクエストに応じて、Webサーバーに保管中のデータを表示させたり、
必要に応じてアクセス制限を行なったり、データベースサーバとの間に入り、リクエストに応答したりします。
Apacheの主な特徴は、OSS(オープンソースソフトウェア)で誰でも利用可能な点、Windows・Linuxなど複数のOSに対応している点、
PHPやデータベースとも連携が取れやすい点が挙げられます。


■Bootstrap
BootstrapはTwitter社が開発したレスポンシブデザインに対応したフロントエンドのフレームワークのことです。
シンプルなコードでグリッドシステムを搭載させたり、よく使用されるスタイルが予め定義されている為、
ルールに沿って使用するだけで整ったデザインのWebサイトを作成する事が出来ます。

④エンジニアなど
■SE
SE(システムエンジニア)の主な業務は、顧客の要求から仕様を決定し、
大まかな設計をするまでの情報システム開発における上流工程を担当します。
SEが担当する上流工程は「要求分析・要件定義」「基本設計」「詳細設計」「テスト」などの業務です。
また、予算や人員、進捗管理などのマネジメント業務も行います。

■PG
プログラマーはSEが設計した仕様書をもとにプログラム言語を用いて、様々なシステムやソフトウェアを作る仕事です。

■Webデザイナー
Webデザイナーの主な仕事内容は、企業や個人などのクライアントから依頼されたWebサイトのデザインを担当することです。
クライアントが思い描いているWebサイトを制作できるよう、全体の構成を考えながらデザインを構築していきます。

⑤ユーザーインターフェース
■CUI(Character-based User Interface)
キーボードに入力されるコマンドによって、OS上の操作を行う、ユーザーインターフェースのこと。

■GUI (Graphical User Interface)
コンピューターの画面上に表示されるウィンドウやアイコン、ボタン、プルダウンメニューなどを使い、
マウスなどのポインティングデバイスで操作できるインターフェースのこと。

⑥ファイルとディレクトリ
■ファイル
ストレージにデータを記録する際に利用者やOSから見て最小の記録単位となるデータのまとまり。

■ディレクトリ
ストレージのファイルシステムなどで、複数のファイルを格納し、ファイルを分類・整理することができる保管場所のことをディレクトリという。フォルダと同じ意味。

■ルート・ディレクトリ
ディレクトリーの中で最も上位の階層にあるディレクトリのこと。

■カレント・ディレクトリ
ユーザが操作中のディレクトリのこと。

■パス
特定のデータの所在を表す文字列のことをパスという。
例：/foo/var/hoge.txt

■絶対パス
ルートディレクトリからの位置を記述する記法を「絶対パス」

■相対パス
カレントディレクトリを起点に、相対的な位置を記述する記法を相対パスという

⑦各種プロトコル
■HTTP(Hyper Text Transfer Protocol)
WebブラウザがWebサーバと通信する際に主に使用する通信プロトコルです。
GoogleやYahooでホームページからWebサイトを閲覧する際に使用されます。


■FTP(File Transfer Protocol)
FTPとは、ネットワークで上でファイル転送時に使用するプロトコルです。
Webサイトを公開する為には、公開する為の情報が必要となりますが、
そのデータをPCから、サーバへ転送する際に使用するのがFTPです。

送る側のPCをFTPクライアント、データを受信する側をFTPサーバといいます。
FTPの仕組みでは、「PI」と「DTP」の2つのプログラムが動作して行われています。
PIはサーバーサイトどクライアントサイド双方に存在し、常に相互通信を行います。
そして、クライアント側からのFTPコマンドを自動解釈し、FTPプロトコルに変換しサーバへ命令をします。
その後、クライアントとサーバのDTP間でデータの受け渡しが行われます。
FTPでは、コマンドの応答を行うプロトコルインタプリタ(PI)と実際のデータ転送と行うデータ転送プロセス(DTP)が分かれて独立してるのが特徴です。
分かれている理由は、以下の2点が挙げられます。
・ファイル転送を効率的に行うためには専用のメカニズムを用意したほうがよい。
・転送処理の中断など、制御とファイル転送が独立していないと実現が難しい。

■HTTPS(Hypertext Transfer Protocol Secure)
HTTP同様、WebブラウザがWebサーバと通信する際に主に使用する通信プロトコルです。
HTTPと異なる点は、通信が暗号化されている点です。HTTPSでは、通信が暗号化されているので、
クレジットカードの支払いページなどでは、HTTPSが使用されています。
HTTPSのもう一つの役割として、ホームページの所有者の正当性を確認することがあげられます。
通信相手のサーバが実在するものであり、ドメインの使用権があることを証明することもHTTPSの重要な役割です。
この通信先のサーバが正当な所有者のものであることを保証するものを「証明書（SSLサーバ証明書）」といいます。
ここまで記載するとHTTPは必要なく感じますが、少しデメリットを記載するのであれば、有償という点が挙げられます。
例えば、個人ブログなどを立ち上げ、それをHTTPS通信で運営させたいと思った場合、SSL証明書代＋ドメイン代＋月額のレンタルサーバ代が発生します。

■SSL(Secure Sockets Layer)
インターネットなどのIPネットワークでデータを暗号化して送受信するプロトコル。
HTTPSの通信時に使用されています。SSLは重大な脆弱性が発見されたことから、根本的に仕組みの見直しが行われ、
現在は、TLS(Transport Layer Security)という仕組みが使用されています。しかし呼び方に馴染みがない為、
現在もSSLやSSL/TLSなど呼ばれることが多い状況です。しかし、仕組みとして動いているのは、TLSとなります。

■SSH(Secure Shell)
暗号化や認証の技術を利用して、ネットワークに接続された機器を遠隔操作し、安全に管理する為のプロトコルです。
SSLと混同しがちになってしまいますが、SSLでは、Webサイトを安全に表示する為にWebサイトの閲覧者が使用するのに対し、
SSHでは、	サーバーへの接続の際にサーバ管理者が使用する用途となります。

■ポート、ポート番号
ポート番号とは、TCP/IP通信において、コンピュータが通信に使用するプログラムを識別するための番号です。 
ポート番号は16ビットの整数であり、0番～65535番まであります。
その中でもよく使用されるプログラムには、ポート番号が決め打ちされています。（ユーザに周知する必要があり不便にはなるが、変更可能）
そのポート番号は、0~1023番まであり、ウェルノウンポート番号と呼ばれます。

TCP/IP通信においては、IPアドレスがあればネットワーク上のコンピュータを一意に識別することができますが、 
該当コンピュータのどのプログラムに通信パケットを届けるかは、IPアドレスだけでは決定できません。
どのプログラムに通信パケットを渡すのかを決定するために、ポート番号を使用します。

例えば、クライアントがHTTPを使って通信する際は、該当サーバのIPアドレスとポート番号80番を指定してパケットを送ります。
ここで、ポート番号80番を指定するのは、HTTPのサーバは、80番ポートでパケットを待っていることが多いためです。
サーバ側では、80番ポートが宛先となっているパケットが届くと、事前に指定しておいたそのポート宛のパケットを処理するプログラム(Apacheなど)が動き、
パケットの中身を処理し、クライアントへ返します。

■HTTP、FTP、SSHの各ポート番号
HTTP:80
FTP: 
SSH:22
※外部からの不正アクセスなどの攻撃は、デフォルトの22番ポートへ行なわれる可能性が高いので変更することが多い。 
 設定するポート番号は自由に使用可能な1024～65535番の中で現在他のサービスなどで使っていないものを選ぶ必要がある。

■ファイアウォール
企業などの内部ネットワークをインターネットを通して侵入してくる不正なアクセスから守るための“防火壁”です。
送られてくるパケットの情報から接続を許可するか判断し、不正なアクセスであると判断した際には、管理者に通報できるよう設計されています。

■TCP
TCPは通信時に使用するプロトコルです。
HTTPなどの通信系のプロトコルと混同されがちですが、階層が違います。
TCPはトランスポート層。HTTPはアプリケーション層。
トランスポート層はTCP/IPの階層モデルでいう、第3階層。役割は通信の信頼性確保の為に決まり事を定めます。
アプリケーション層はTCP/IPの階層モデルでいう、第4階層。役割は、通信時のセッションに関することやデータ形式の変換時に関すること、通信時のソフトとの窓口に関する決まり事を定めます。
その為、TCPでは、通信の信頼性を確保した上で、データをアプリケーション層に渡す役割をしています。
比較対象としては、UDPがあげられます。TCPは相手に無事データが転送されたか毎回確認を行う為、
信頼性は高いが転送効率は低く、転送効率より確実性が重視される用途でよく利用されます。
UDPでは、確認作業は行わずに送りっぱなしにする仕組みのため、確実性より転送効率や即時性を重視する用途にはUDPを使用します。

⑧IPアドレス
■IPアドレス
IPアドレスは、パソコンやスマートフォンなどネットワーク上の機器を
識別するために割り当てられていて、インターネット上での住所のような役割を担っています。


■グローバルIPアドレス
インターネットへ接続する際に使用するIPアドレスです。
動的IPアドレスと固定IPアドレスの2種類あり、固定IPアドレスは変動しませんが、
動的IPアドレスはDHCP機能により自動で割り振られ、インターネットへ接続する度に変動します。
グローバルIPアドレスで固定IPを使用する際は、プロバイダーと契約（有償）が必要となります。
使用例：インターネット向けのWebサーバ設置時に使用することが多い。
※グローバルIPアドレスを固定する場合は、外部からの攻撃を受けやすくなる為、対策を寝る必要があります。


■プライベートIPアドレス
家庭内や企業内で使用されるPCなどに設定されているIPアドレスです。
LAN内でのみ使用することができ、インターネット環境で使用する際は、
プライベートIPアドレスをNAT機能(ルーターやゲートウェイに搭載されている機能)を使用し、グローバルIPアドレスに変換する必要があります。
また、動的IPアドレスと固定IPアドレスの2種類あり、固定IPアドレスは変動しませんが、
動的IPアドレスはDHCP機能により自動で割り振られ、変動します。
固定IPアドレスは手動で設定する必要があり、
他のデバイスとIPが重複するとネットワークアクセスが出来なくなってしまうことが注意点です。

⑨ドメイン
■ドメイン
ドメインは、インターネット上に存在するコンピューターやネットワークを識別するための名前です。
例：ホームページURL https://www.example.com/
→example.comの部分がドメイン名、wwwの部分がホスト名となります。
ドメイン名は企業のメールアドレスにも使用され、ユーザ名@ドメイン名で各社員にアドレスを割り振る場合が多くあります。
例：uchimuro@example.com

■DNS
インターネット上のコンピュータ同士が通信する際には、「192.41.192.129」といった数字をピリオドでつないだ、IPアドレスで通信相手を特定していますが、
数字の羅列は人間が識別するのは困難であるため、人間が覚えやすいように"example.com"といった文字列からなるドメイン名を利用し、変換しています。 
このドメイン名とIPアドレスを対応づける仕組みをDNS(Domain Name System)と言います。

■VPN
VPN接続とは、インターネット上に仮想の専用線を設定し、特定の人のみが利用できる専用ネットワークです。接続したい拠点（支社）に専用のルーターを設置し、相互通信を行うことができます。
また、「トンネリング」「暗号化」「承認」を設定することで、セキュリティ上安全にデータのやり取りを行うことができます。
コロナの影響で在宅テレワークを始める企業が増加しましたが、VPN環境があれば、
自宅のネットワークからも安全に社内のネットワークにアクセスが可能となります。

■ブリッジ
複数のネットワークセグメントを結ぶ中継機器のうち、受信したデータのMACアドレスを見てデータの行き先を振り分けてくれる機器のことを指します。

■プロキシサーバー
プロキシ（Proxy）は英語で「代理」の意味。
インターネットに直接接続できないコンピューターに代わり、
代理でインターネットに接続し、Webサイトへのアクセスなどを行うサーバーのことを指します。
ネットワーク内におけるインターネットの出入り口をプロキシサーバー経由に限定することで、
外部からの不正アクセスを防止したり、業務と関係のないWebサイトへのアクセスを禁止したりすることが可能になります。
また、データを蓄えるキャッシュ機能があるため、別のコンピューターから同じ要求が来ても、素早くデータを返すことが可能です。
つまり、社員全員が特定サイトを閲覧するような場合でも、誰かが一度アクセスするだけで済むため、時間の短縮化が図れます。

現在では、アクセス元のコンピューターの身元を隠すためにプロキシサーバーを使うケースもあります。
プロキシサーバーを介してアクセスすると、接続先のサーバーに残るのはプロキシサーバーのIPアドレスだけなので、個人のIPアドレスは知られずに済む為です。
機密情報や個人情報の漏えいが許されない企業では、プロキシサーバを導入するケースが増えてきています。

⑩電子メール
■SMTP（Simple Mail Transfer Protocol）
SMTPは、メールを相手のメールサーバまで届ける仕組みのことを指します。


■POP（Post Office Protocol）
POPは、メールソフトが自動的に自社のメールサーバーにアクセスして、
メールをPCにダウンロードさせる仕組みのことを指します。

■IMAP（Internet Message Access Protocol）
IMAPは、POPと同じ、メールを取り込むための手順のことを指します。
違いは、メールをサーバーに残すか残さないかにあります。
POPでは、PCにメールを受診させた後はサーバにデータは残りませんが、IMAPでは、データはサーバに残したままにし、
キャッシュデータのみPCにコピーする形になります。つまりメールデータの管理はサーバ上で行うのが　IMAPです。
複数の端末で一つのメールアカウントを共有したい場合などに採用されます。デメリットはサーバ上のデータ管理に工数がかかることです。

⑪セッションとクッキー
■セッション
セッションは、サーバ上に一時保存されたデータのことです。
このデータは、ユーザーがWebサイトにいる間、サイト上のすべてのページで利用可能になります。
例えば、ショッピングサイトを閲覧していて、ある商品をショッピングカートに入れた後、
Webサイトを離れ、再度戻ってきたときに、ショッピングカートに商品が入ったままになっているのは、セッションによって情報を保存している為となります。
しかし、この機能はセッションのみではなく、クッキーと併用して実現しています。
簡単に両者の役割をまとめると、クッキーは「誰が」の情報を取得し、セッションは「何をしたか？」という情報を取得しています。


■クッキー（Cookie）
ユーザーのコンピューターに保存される小さなファイルのことを指します。
ファイルは自動的にクッキーファイル（ブラウザのメモリ）に格納され、主に次の内容を保存しています。
・クッキーが送信されたサーバーの名前
・クッキーの有効期間
・値 – 通常はランダムに生成された一意の番号

また、クッキーには、セッションクッキーと永続クッキーの２種類があります。
セッションクッキーは、Webサイトにアクセスしている間、ブラウザに一時的に作成され、
ユーザーがサイトを離れると、セッションクッキーは削除されます。
一方、永続クッキーはユーザーがブラウザを閉じても削除されず、
そのクッキーを作成したWebサイトにアクセスすると再度アクティブになります。
永続クッキーは、Cookieのファイル内で設定された期間、ブラウザに残ります。

クッキーは特定のWebサイトにアクセスしたユーザーの情報を保存しています。
例えば、Webサイト上で名前やEメールアドレスなどをフォームに入力することがあります。
これがクッキーを使用しているWebサイトですと、フォームに入力した情報はクッキーに変えられて、ユーザーのコンピュータに保存されます。
その結果、サーバーは特定のユーザーに合わせたページを配信することができるようになるという仕組みです。

■キャッシュ
キャッシュという用語はコンピュータ用語にもあります。
コンピュータに使われるキャッシュは、よく使うデータへのアクセスを速くするために、より高速な記憶装置に一時的に保存する仕組みのことを指します。
こうした仕組みはWebサイトで使われるキャッシュでも同様です。
Webサイトのキャッシュは、頻繁にアクセスされるコンテンツを保存し、その情報を呼び出すことで表示速度を高速化します。
キャッシュとクッキーおよびセッションとの大きな違いは、
キャッシュが表示の高速化のために情報を保存しているのに対して、クッキーやセッションはユーザーの情報を保存していることです。
キャッシュは表示速度を上げることでユーザーを助け、クッキー・セッションはユーザーの行動を覚えておくことで、機能のサポートをしてくれています。


⑫DB（データベース）について
■チューニング
データベースにおいて、チューニングは、性能の悪いSQLを発見し、その処理過程を改善することを指します。

■スロークエリ
データベースにおいて、処理に時間のかかる遅いSQLのことをスロークエリと呼びます。
基本的には、MySQLやPostgreSQLの設定により取得することができ、
どの程度遅いものを対象とするか等を指定することが出来ます。

■インデックス
データベースにおいて、インデックスとはテーブルの情報を探す時に検索の対象としてよく使用するカラムの
値だけを取り出して検索しやすいようにする仕組みです。
例：id	name	address	oldというカラムを持つテーブルに対して、別途で　id、nameだけに情報を絞り、テーブルを見やすくする。
インデックスを作成しておくと便利ではありますがメリットだけではありません。
格納されているデータ量が少ないとあまり、パフォーマンスが出ませんし、データ追加時の処理が重くなるというデメリットもありますので、
インデックスが必要かどうかについては、よく検討した上で作成する必要があります。

⑬テストについて
■フロー
テスト作業のフロー（作業の流れは）V字モデルに基づき、進めていくことが基本です。
下記の図のようにコーティングが完了した後はまず単体テストから行い、内部設計に問題ないかチェックを行います。

『V字モデル』
要件定義　　　　　←検証　　　　　　運用テスト　　　　　　　　　　
　　外部設計　　　←検証　　　　結合テスト
　　　　内部設計　←検証　　単体テスト
　　　　　　　　コーディング　　　　

■単体テスト
単体テストでは開発したシステムを機能ごとに検証します。
プログラミングが完了してから一番最初に行われるテストであり、関数単位で不具合を分析するのが一般的です。
システムを組み合わせる前に動作させる必要がある為、開発者が開発環境でシステムを検証します。
動作を検証するために開発者が必要なデータを手作業で作る場合もあります。
各モジュールが問題なく、動作をするかに重きをおいてテストを行います。

■結合テスト
結合テストではシステムにおける複数の機能を組み合わせて同時に稼働させ動作を検証します。
結合した際、意図した通りに動作するかどうかを検証します。
※前段階である単体テストをすべて完了していることが前提です。
結合テストでは、ただ動作するかどうかをテストするのではなく、操作と機能動作の組み合わせが正しいか、仕様書通りに機能しているかについても検証します。
また、結合テストでは大きく3つの作業工程に分けることができます。
1 インターフェーステスト：インタフェーステストでは、個々の機能が正しく連携するかどうかを検証します。
　機能間やモジュール間でデータを引き渡した際、データの型が異なることによってデータの値が変わらないか、
　そもそも引き渡されるべきデータがすべて引き渡されているかを確認します。

2 業務シナリオテスト：業務シナリオテストとは、実際の業務を想定したテストです。
　内容は目的の業務や対象システムによって異なりますが、実際に業務で行う工程や一日の流れをテスト仕様書として作成して検証します。

3負荷テスト：負荷テストとは、システムリソースの限界まで操作し、意図しないシステムのパフォーマンス低下や停止が発生しないかを検証するテストです。
  例えば、同時にアクセスが集中した際にも、定められた最大アクセス数までレスポンスが低下せずに正しく処理できるかどうかを検証します。


⑭チケット管理ツール
■チケット管理ツール
仕事を管理する為のアプリケーションです。
タスク管理や工程管理などの機能を持ち合わせており、チームで作業をする場合に仕事を円滑に進め、
より効率的な働き方の実現を支援するツールです。

また、チケット管理とは、実施するべき作業や課題を「チケット」として管理する方法です。
発生日や作業内容、優先度、担当者や期日を登録して管理します。
プロジェクト管理ではチケットの発行・処理枚数により、プロジェクト全体の状況を把握する手段として活用されます。


■タスク
遂行すべき仕事や作業のことを指します。
プロジェクトを進める際は、複数のタスクが同時に動くので優先順位をつけてタスクを完了させていく必要があります。

⑮バージョン管理
■Git
Gitとは、分散型バージョン管理システムです。
プログラマーではコード編集後に不具合が発生すると以前のバージョンに戻さねばならない場面などが多々あります。
その際に、GITを使用していれば、簡単に過去のバージョンに戻すことが可能です。
主にGITで使用する機能はこちらです。
・古いバージョンに簡単に戻せる
・新旧のファイルを一元管理できる
・編集した履歴を複数人で共有できる
・複数人で修正した部分を一つに統合できる

■SourceTree
通常、GIitでは、コマンド入力による操作となりますが、より分かりやすく操作させることを目的に
GUI形式でGitを操作可能にしたツールです。
OSに依存せず無償インストールしてすぐ使うことができます。
コマンド操作だと「今誰が、どのファイルを、どのように編集しているのか？」ということが直感的に分かりにくいのですが、
Source Treeを使えば作業を可視化できるので、安心してチームで作業に取り組むことができます。

■SVN(Apache Subversion)
Git同様バージョン管理が可能な無償ツールです。
Gitが出てくる以前は、SVNが主流でしたが、現在では、　Gitが主流になってきています。
理由は、SVNでは管理フォルダをメンバー全員で共有するので、全員同じサーバにコミットします。
それに対し、Gitではコミット情報を一度各メンバーのローカル環境で確定させた上で共有しているサーバ環境にコミットすることが出来るので不要なコミットを減らすことが出来ます。
また、Githubを使用し、自身が作ったプログラムの配布をすることが出来るので、第三者にシステムを評価してもらうことも可能です。
SVNと比較し、機能幅や使いやすさが向上した為、Git利用が主流になってきています。


■コンフリクト
同じ箇所を別々のブランチで、異なった変更をかけてしまっているのに
マージしてしまった場合に二つの分岐で不整合が起きてしまい、その状態から進ませることができなくなります。
この現象を「衝突」または「コンフリクト」といいます。
Gitでは、コンフリクトが発生した際、ファイルのどの箇所で競合しているのか表記して教えてくれます。

■デグレ
デグレとは、新しいバージョンのソフトウェアの品質が、以前より悪くなること。
また、以前修正した不具合やバグが再発・復活することを指します。

■マージツール
マージツールでは、コンフリクトが発生した際により明確に2つのファイルを比較することが可能です。
開発の規模が大きくなればなるほど、コンフリクトが発生した際の修正業務に時間がかかってしまうのですが、
マージツールを使用すれば、その修正作業時間を大幅に削減することが可能です。
使用されることが多い、マージツールは"Araxis Merge"です。
主な機能は下記となります。
・テキストの比較とマージ
・フォルダ比較
・2通りの比較結果の保存（レポート、保存）












